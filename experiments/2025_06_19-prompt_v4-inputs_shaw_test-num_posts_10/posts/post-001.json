{
  "input": "Share video: My AI development setup from scratch.\n\n1. Xcode \n2. Homebrew \n3. Python \n4. GitHub CLI \n5. Cursor",
  "writing_steps": "Step 1: Purpose & Audience\n- Purpose: Share Shaw's AI development stack for transparency and educate on practical setup steps. Promotes video for deeper dive.\n- Audience: New and intermediate AI engineers, technical peers, aspiring solo builders looking for an effective coding/dev environment.\n\nStep 2: Post Wireframe\n[Hook]\n[Stack details & why]\n[Link to video]\n[CTA: Ask for stack additions or reader tools]\n\nStep 3: Body\nWhen I’m spinning up a new AI project, my development setup usually looks like this:\n\n1. Xcode – For essential command-line tools (even if you don’t build iOS apps)\n2. Homebrew – The go-to for managing dependencies and quick installs on macOS\n3. Python – The backbone for almost any AI app\n4. GitHub CLI – For staying in version control directly from the terminal\n5. Cursor – My current favorite code editor (especially with its AI-assisted features)\n\nThis combo covers everything I need to ship, debug, and share code easily.\n\nStep 4: CTA\nWhat tool would you add to this stack?\n\nStep 5A: Brainstorm Hook Directions\n1. [User phrasing] \"My AI dev setup from scratch:\"\n2. [Beginner-to-expert clarity] “New to AI dev? Here’s a stack that covers the core — no fluff.”\n3. [Trend/urgency] “In 2024, these 5 tools are my non-negotiables for building AI apps on Mac.”\n4. [Transparency] “Everything I use to build and ship AI projects—no extras.”\n5. [Practical breakdown] “5 tools that make my AI coding workflow faster and easier.”\n\nStep 5B: Short Notes\n1. [User phrasing] Direct, clear—you provided this as the starting point.\n2. [Beginner clarity] Good for framing for newcomers and demystifying the stack.\n3. [Trend] Strong if emphasizing relevance for this year.\n4. [Transparency] Matches Shaw’s behind-the-scenes ethos.\n5. [Practical] Focuses on workflow and efficiency.\n\nStep 5C: Choose Strongest Direction and Write Hook\nLet’s go with: [Transparency] “Here’s my full AI development setup (from scratch):”\n\nStep 6: Draft Full Post\nHere’s my full AI development setup (from scratch):\n\n1. Xcode — For essential command-line tools (you need this on Mac, even if you never touch iOS)\n2. Homebrew — My preferred way to install and manage packages/dependencies\n3. Python — Still the core language for almost every AI project I ship\n4. GitHub CLI — All my version control and repo operations, right from the terminal\n5. Cursor — My go-to code editor (AI-driven autocomplete has changed my workflow)\n\nThis stack handles everything I need: spinning up new repos, managing dependencies, writing/debugging code, and pushing projects live.\n\nI just published a video walking through this setup, plus why I use each tool (link below).\n\nWhat tool would you add to your stack?\n\nStep 7: Review for Style, Voice, and Flow\n- No business clichés, motivational language, or figurative expressions.\n- Open factual, transparent statement. \n- Short, stepwise breakdown, matches Shaw’s previous “stack” posts.\n- Targeted, concrete CTA.\n- White space and bullets for scannability.\n\nStep 8: Final Post",
  "final_post": "Here’s my full AI development setup (from scratch):\n\n1. Xcode — For essential command-line tools you need on Mac (even if you never build iOS apps)\n2. Homebrew — My go-to for package management and quick installs\n3. Python — The backbone of almost every AI project I work on\n4. GitHub CLI — Handy for version control and project management in the terminal\n5. Cursor — My current favorite code editor, especially for AI-assisted workflows\n\nThis setup lets me spin up, debug, and ship new AI projects efficiently—without any wasted motion.\n\nI break down each tool and my workflow in a new video. Watch here: [link]\n\nWhat tool would you add to your development stack?"
}