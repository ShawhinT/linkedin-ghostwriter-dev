{
  "input": "A problem with AI today is that it means different things to different people. Share 3 types of software.\n\nSoftware 1.0 = Rule-based systems\nSoftware 2.0 = ML\nSoftware 3.0 = LLMs",
  "writing_steps": "Step 1:\n- Purpose: Educate audience about the evolving definitions of \"AI\" by clarifying different types of software paradigms. \n- Target audience: Broadly tech-aware professionals or learners confused by the overload of \"AI\" terminology.\n\nStep 2: Post wireframe\n- Hook: Call out the confusion around \"AI\" and tease that there are actually 3 big types of software.\n- Meat: Briefly break down Software 1.0 (rule-based), 2.0 (ML), and 3.0 (LLMs) with a line or two on each.\n- CTA/Question: Ask which paradigm they’re working with now, or which is most interesting.\n\nStep 3: Write the body\nSaw “AI” tossed around lately, but it means wildly different things depending on who you ask. Here’s one way to break it down:\n\n- Software 1.0: Rule-based systems. If you’ve ever written a bunch of if/else statements or a hand-coded algorithm, that’s 1.0. Every decision is explicit and programmed by a human.\n\n- Software 2.0: Machine learning. With 2.0, you show the computer examples, label the data, and let it learn the rules on its own. This covers most classic ML you see in products today.\n\n- Software 3.0: LLM-based systems. Now, you can prompt a massive language model to process text, reason, or even “write” programs—without explicitly writing rules or collecting labeled data yourself.\n\nStep 4: CTA\nWhich kind of software do you find yourself working with most—or want to learn more about next?\n\nStep 5A: Brainstorm hooks (labeled directions)\n- [Problem/solution] “Why does 'AI' mean something different to everyone?”\n- [Numbers/clarity] “3 Generations of Software (and where AI fits in)”\n- [Beginner-to-expert clarity] “Not sure what people mean by 'AI'? Here’s a quick breakdown.”\n- [User’s input style] “A problem with AI today is that it means different things to different people.”\n\nStep 5B: Short notes to each direction\n- Problem/solution: Tackles confusion in industry. Sets up value of clarity.\n- Numbers/clarity: Leans into structure (“3 types”).\n- Beginner-to-expert: Accessible, and addresses the gap in understanding.\n- User’s input: Very direct. Honest acknowledgment of the problem.\n\nStep 5C: Choose strongest direction\n- The most compelling is clarifying “3 types of software” because it’s practical and scannable.\n\nFinal hook: “Confused about what ‘AI’ actually means? You’re not alone. Here are 3 types of software you should know.”\n\nStep 6: Draft full post\nConfused about what ‘AI’ actually means? You’re not alone. Here are 3 types of software you should know.\n\n“AI” gets thrown around a lot—but depending on who you ask, people might mean very different things. Here’s how I like to break it down:\n\n1. Software 1.0: Rule-based systems\n- Think hard-coded logic or if/else statements. Every rule is written by a human.\n\n2. Software 2.0: Machine learning (ML)\n- The computer learns the rules from labeled data you provide. Most classic ML apps fit here.\n\n3. Software 3.0: Large Language Models (LLMs)\n- You prompt a huge pretrained model to generate, reason, or process text. No need for hand-written rules or curated training data.\n\nWhich type of software do you find yourself working with most right now?\n\nStep 7: Review for Shaw’s style, voice, and flow:\n- ✅ Honest, accessible, scannable (bullets)\n- ✅ Only one em dash (in hook; justified)\n- ✅ Ends with a single clear question\n- ✅ No fabricated experience\n- ✅ Clean white space\n\nStep 8: Write the final post.",
  "final_post": "Confused about what “AI” actually means? You’re not alone. Here are 3 types of software you should know:\n\n“AI” gets thrown around a lot—but depending on who you ask, it could mean very different things. Here’s how it breaks down:\n\n1. **Software 1.0: Rule-based systems**\n   - Think hand-coded logic and if/else statements. Every rule is written by a human.\n\n2. **Software 2.0: Machine learning (ML)**\n   - The computer learns patterns from labeled data you provide. Most classic ML apps fit here.\n\n3. **Software 3.0: Large Language Models (LLMs)**\n   - You prompt a massive pretrained model to generate, reason, or process text—no hand-written rules or curated training data required.\n\nWhich type of software do you find yourself working with most right now?"
}