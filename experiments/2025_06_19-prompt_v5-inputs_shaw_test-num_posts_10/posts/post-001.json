{
  "input": "Share video: My AI development setup from scratch.\n\n1. Xcode \n2. Homebrew \n3. Python \n4. GitHub CLI \n5. Cursor",
  "writing_steps": "Step 1: Purpose and Audience\n- Purpose: Share Shaw's current AI development stack/setup to educate peers who want to set up a new dev environment or see Shaw's process/tools.\n- Audience: AI engineers, developers, students, and technical creators interested in practical tool stacks for AI projects.\n\nStep 2: Wireframe\n[Hook]\n[Brief intro: why care about tool choices]\n[Quick rundown of each tool and why it's part of the stack]\n[CTA: Ask for practical additions (no motivational prompts)]\n\nStep 3: Body\n- Give a short, clear description of each tool and what role it plays in the workflow.\n- Emphasize direct use cases or why these specific tools (no fluff).\n\nStep 4: CTA\nAsk readers what they'd add or what's essential for them (literal/practical ask).\n\nStep 5: Hook Explorations\nA) [User's framing] My AI development setup from scratch\nB) [Problem/solution] Setting up a repeatable AI dev environment can be confusing—here are the tools I use and why.\nC) [Beginner-expert] If you want a simple AI dev stack, these 5 tools cover almost everything I need.\nD) [Personal workflow/tools] My current AI development environment in 5 tools.\nE) [Numbers/list-driven] 5 tools I use every day for AI development (with reasons).\n\nStep 5B: Notes\nA) Familiar headline, but less urgency.\nB) Good for those unsure where to start.\nC) Focuses on simplicity/opinion.\nD) Personal transparency—matches Shaw's voice.\nE) List-focused, clear promise—could pull in skimmers.\n\nStep 5C: Pick strongest direction\nD/E have most punch for technical audience. Let's go with D, using a direct line: \"My current AI development environment in 5 tools.\"\n\nStep 6: Draft full post\n[Hook]\nMy current AI development environment in 5 tools.\n\n[Meat]\nIf you’re building AI apps from scratch, your setup can make or break your workflow. Here’s what I use every day:\n\n1. Xcode – I use this for code editing, especially when I need tight integration with macOS tools.\n2. Homebrew – My go-to package manager for quick installs on Mac.\n3. Python – Still the core of most AI projects, both prototyping and production.\n4. GitHub CLI – Handles version control and repo management, all from the terminal.\n5. Cursor – An AI-powered IDE that streamlines coding and integrates helpful tools.\n\n[CTA]\nWhat’s an essential tool in your dev stack that’s not on this list?\n\nStep 7: Review\n- No em dash currently, clean.\n- Literal, stepwise, clear layout.\n- Matches voice in Example 5, heavy on tools, literal on function/use.\n- CTA is practical and literal.\n\nStep 8: Final Formatting & Polish",
  "final_post": "My current AI development environment in 5 tools.\n\nIf you’re building AI apps from scratch, your setup can make or break your workflow. Here’s what I use every day:\n\n1. Xcode – My primary editor for code that needs tight integration with macOS tools.\n2. Homebrew – Handles most installs on my Mac quickly and cleanly.\n3. Python – Still the core stack for both prototyping and production AI work.\n4. GitHub CLI – My preferred way to manage repos and version control in the terminal.\n5. Cursor – An AI-powered IDE that streamlines coding and offers useful integrations.\n\nWhat’s an essential tool in your dev stack that’s not on this list?"
}